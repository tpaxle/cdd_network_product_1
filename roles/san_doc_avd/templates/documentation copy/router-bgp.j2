{% if router_bgp is arista.avd.defined %}

=== Router BGP

==== Router BGP Summary

[%header,cols=2*]
|===
| BGP AS
| Router ID

| {{ router_bgp.as }}
| {{ router_bgp.router_id | arista.avd.default('-') }}

|===


{%     if router_bgp.bgp_cluster_id is arista.avd.defined %}

[%header,cols=2*]
|===
| BGP AS
| Cluster ID

| {{ router_bgp.as }}
|  {{ router_bgp.bgp_cluster_id }}

|===
{%     endif %}

{%     if router_bgp.bgp_defaults is arista.avd.defined or router_bgp.bgp is arista.avd.defined %}

[%header,cols=1*]
|===
| BGP Tuning

{%         for bgp_default in router_bgp.bgp_defaults | arista.avd.default([]) %}
| {{ bgp_default }}

{%         endfor %}

{%         if router_bgp.bgp.bestpath.d_path is arista.avd.defined(true) %}
| bgp bestpath d-path

{%         endif %}
|===
{%     endif %}


{%     if router_bgp.peer_groups is arista.avd.defined %}
==== Router BGP Peer Groups
{%         for peer_group in router_bgp.peer_groups | arista.avd.natural_sort %}

===== {{ peer_group }}

[%header,cols=2*]
|===
| Settings
| Value

{%             if router_bgp.peer_groups[peer_group].type is arista.avd.defined %}
| Address Family
| {{ router_bgp.peer_groups[peer_group].type }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].remote_as is arista.avd.defined %}
| Remote AS
| {{ router_bgp.peer_groups[peer_group].remote_as }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].local_as is arista.avd.defined %}
| Local AS
| {{ router_bgp.peer_groups[peer_group].local_as }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].route_reflector_client is arista.avd.defined %}

| Route Reflector Client
| Yes
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].bgp_listen_range_prefix is arista.avd.defined %}
| Listen range prefix
| {{ router_bgp.peer_groups[peer_group].bgp_listen_range_prefix }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].next_hop_self is arista.avd.defined(true) %}
| Next-hop self
| True
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].next_hop_unchanged is arista.avd.defined(true) %}
| Next-hop unchanged
| True
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].update_source is arista.avd.defined %}
| Source
| {{ router_bgp.peer_groups[peer_group].update_source }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].bfd is arista.avd.defined(true) %}
| Bfd
| true
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].ebgp_multihop is arista.avd.defined %}
| Ebgp multihop
| {{ router_bgp.peer_groups[peer_group].ebgp_multihop }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].send_community is arista.avd.defined %}
| Send community
| {{ router_bgp.peer_groups[peer_group].send_community }}
{%             endif %}

{%             if router_bgp.peer_groups[peer_group].maximum_routes is arista.avd.defined %}
{%                 if router_bgp.peer_groups[peer_group].maximum_routes == 0 %}
{%                     set value = "0 (no limit)" %}
{%                 else %}
{%                     set value = router_bgp.peer_groups[peer_group].maximum_routes %}
{%                 endif %}
| Maximum routes
| {{ value }}
{%             endif %}

|===

{%         endfor %}

{%     endif %}
{%     set temp = namespace() %}
{%     set temp.bgp_vrf_neighbors = false %}
{%     if router_bgp.vrfs is arista.avd.defined %}
{%         for vrf in router_bgp.vrfs | arista.avd.natural_sort %}
{%             if router_bgp.vrfs[vrf].neighbors is arista.avd.defined %}
{%                 set temp.bgp_vrf_neighbors = true %}
{%                 break %}
{%             endif %}
{%         endfor %}
{%     endif %}

{%     if router_bgp.neighbors is arista.avd.defined or temp.bgp_vrf_neighbors is arista.avd.defined(true) %}

=== BGP Neighbors

[%header,cols=5*]
|===
| Neighbor
| Remote AS
| VRF
| Send-community
| Maximum-routes

{%         for neighbor in router_bgp.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.neighbors[neighbor].peer_group is arista.avd.defined %}
{%                 set inherited = namespace() %}
{%                 if router_bgp.peer_groups[router_bgp.neighbors[neighbor].peer_group].remote_as is arista.avd.defined %}
{%                     set inherited.remote_as = "Inherited from peer group " ~ router_bgp.neighbors[neighbor].peer_group %}
{%                 endif %}
{%                 if router_bgp.peer_groups[router_bgp.neighbors[neighbor].peer_group].vrf is arista.avd.defined %}
{%                     set inherited.vrf = "Inherited from peer group " ~ router_bgp.neighbors[neighbor].peer_group %}
{%                 endif %}
{%                 if router_bgp.peer_groups[router_bgp.neighbors[neighbor].peer_group].send_community is arista.avd.defined %}
{%                     set inherited.send_community = "Inherited from peer group " ~ router_bgp.neighbors[neighbor].peer_group %}
{%                 endif %}
{%                 if router_bgp.peer_groups[router_bgp.neighbors[neighbor].peer_group].maximum_routes is arista.avd.defined %}
{%                     set inherited.maximum_routes = "Inherited from peer group " ~ router_bgp.neighbors[neighbor].peer_group %}
{%                 endif %}
{%             endif %}
{%             set active_parameter = namespace() %}
{%             set active_parameter.remote_as = router_bgp.neighbors[neighbor].remote_as | arista.avd.default(inherited.remote_as, '-') %}
{%             set active_parameter.vrf = router_bgp.neighbors[neighbor].vrf | arista.avd.default(inherited.vrf, 'default') %}
{%             set active_parameter.send_community = router_bgp.neighbors[neighbor].send_community | arista.avd.default(inherited.send_community, '-') %}
{%             set active_parameter.maximum_routes = router_bgp.neighbors[neighbor].maximum_routes | arista.avd.default(inherited.maximum_routes, '-') %}
| {{ neighbor }}
| {{ active_parameter.remote_as }}
| {{ active_parameter.vrf }}
| {{ active_parameter.send_community }}
| {{ active_parameter.maximum_routes }}
{%         endfor %}
{%         for vrf in router_bgp.vrfs | arista.avd.natural_sort %}
{%             if router_bgp.vrfs[vrf].neighbors is arista.avd.defined %}
{%                 for neighbor in router_bgp.vrfs[vrf].neighbors %}
{%                     set inherited_vrf = namespace() %}
{%                     if router_bgp.vrfs[vrf].neighbors[neighbor].peer_group is arista.avd.defined %}
{%                         if router_bgp.peer_groups[router_bgp.vrfs[vrf].neighbors[neighbor].peer_group].remote_as is arista.avd.defined %}
{%                             set inherited_vrf.remote_as = "Inherited from peer group " ~ router_bgp.vrfs[vrf].neighbors[neighbor].peer_group %}
{%                         endif %}
{%                         if router_bgp.peer_groups[router_bgp.vrfs[vrf].neighbors[neighbor].peer_group].send_community is arista.avd.defined %}
{%                             set inherited_vrf.send_community = "Inherited from peer group " ~ router_bgp.vrfs[vrf].neighbors[neighbor].peer_group %}
{%                         endif %}
{%                         if router_bgp.peer_groups[router_bgp.vrfs[vrf].neighbors[neighbor].peer_group].maximum_routes is arista.avd.defined %}
{%                             set inherited_vrf.maximum_routes = "Inherited from peer group " ~ router_bgp.vrfs[vrf].neighbors[neighbor].peer_group %}
{%                         endif %}
{%                     endif %}
{%                     set active_parameter_vrf = namespace() %}
{%                     set active_parameter_vrf.remote_as = router_bgp.vrfs[vrf].neighbors[neighbor].remote_as | arista.avd.default(inherited_vrf.remote_as, '-') %}
{%                     set active_parameter_vrf.send_community = router_bgp.vrfs[vrf].neighbors[neighbor].send_community | arista.avd.default(inherited_vrf.send_community, '-') %}
{%                     set active_parameter_vrf.maximum_routes = router_bgp.vrfs[vrf].neighbors[neighbor].maximum_routes | arista.avd.default(inherited_vrf.maximum_routes, '-') %}
| {{ neighbor }}
| {{ active_parameter_vrf.remote_as }}
| {{ vrf }}
| {{ active_parameter_vrf.send_community }}
| {{ active_parameter_vrf.maximum_routes }}

{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}


|===


{%     if router_bgp.neighbor_interfaces is arista.avd.defined %}

==== BGP Neighbor Interfaces

[%header,cols=2*]
|===
| Neighbor Interface
| Peer Group
| Remote AS

{%         for neighbor_interface in router_bgp.neighbor_interfaces | arista.avd.natural_sort %}
{%             set neighbor_interface = neighbor_interface %}
{%             set peer_group = router_bgp.neighbor_interfaces[neighbor_interface].peer_group | arista.avd.default("-") %}
{%             set remote_as = router_bgp.neighbor_interfaces[neighbor_interface].remote_as | arista.avd.default("-") %}
| {{ neighbor_interface }}
| {{ peer_group }}
| {{ remote_as }}
{%         endfor %}
|===
{%     endif %}



{%     if router_bgp.aggregate_addresses is arista.avd.defined %}

==== BGP Route Aggregation

| Prefix | AS Set | Summary Only | Attribute Map | Match Map | Advertise Only |
| ------ | ------ | ------------ | ------------- | --------- | -------------- |
{%         for aggregate_address in router_bgp.aggregate_addresses | arista.avd.natural_sort %}
{%             set prefix = aggregate_address  %}
{%             if router_bgp.aggregate_addresses[aggregate_address].as_set is arista.avd.defined(true) %}
{%                 set as_set = "True" %}
{%             else %}
{%                 set as_set = "False" %}
{%             endif %}
{%             if router_bgp.aggregate_addresses[aggregate_address].summary_only is arista.avd.defined(true) %}
{%                 set summary_only = "True" %}
{%             else %}
{%                 set summary_only = "False" %}
{%             endif %}
{%             set attribute_map = router_bgp.aggregate_addresses[aggregate_address].attribute_map | arista.avd.default("-") %}
{%             set match_map = router_bgp.aggregate_addresses[aggregate_address].match_map | arista.avd.default("-") %}
{%             if router_bgp.aggregate_addresses[aggregate_address].advertise_only is arista.avd.defined(true) %}
{%                 set advertise_only = "True" %}
{%             else %}
{%                 set advertise_only = "False" %}
{%             endif %}
| {{ prefix }} | {{ as_set }} | {{ summary_only }} | {{ attribute_map }} | {{ match_map }} | {{ advertise_only }} |
{%         endfor %}
|===
{%     endif %}
{%     if router_bgp.address_family_evpn is arista.avd.defined %}

==== Router BGP EVPN Address Family
{%         if router_bgp.address_family_evpn.route.import_match_failure_action is arista.avd.defined('discard') %}

- VPN import pruning is __enabled__
{%         endif %}
{%         if router_bgp.address_family_evpn.peer_groups is arista.avd.defined %}

===== EVPN Peer Groups


[%header,cols=2*]
|===
| Peer Group | Activate

{%             for peer_group in router_bgp.address_family_evpn.peer_groups | arista.avd.natural_sort %}
| {{ peer_group }} | {{ router_bgp.address_family_evpn.peer_groups[peer_group].activate | arista.avd.default("false") }}

{%             endfor %}
|===
{%         endif %}


{%         if router_bgp.address_family_evpn.neighbor_default.encapsulation is arista.avd.defined %}
===== EVPN Neighbor Default Encapsulation

[%header,cols=2*]
|===
| Neighbor Default Encapsulation | Next-hop-self Source Interface
{%             set row_default_encapsulation = router_bgp.address_family_evpn.neighbor_default.encapsulation | arista.avd.default("vxlan") %}
{%             set row_nhs_source_interface = router_bgp.address_family_evpn.neighbor_default.next_hop_self_source_interface | arista.avd.default('-') %}
| {{ row_default_encapsulation }} | {{ row_nhs_source_interface }}
{%         endif%}
|===

{%         if router_bgp.address_family_evpn.evpn_hostflap_detection is arista.avd.defined %}

===== EVPN Host Flapping Settings

[%header,cols=3*]
|===
| State | Window | Threshold
{%             if router_bgp.address_family_evpn.evpn_hostflap_detection.enabled | arista.avd.default(true) %}
{%                 set evpn_hostflap_detection_state = "Enabled" %}
{%                 set evpn_hostflap_detection_window = router_bgp.address_family_evpn.evpn_hostflap_detection.window | arista.avd.default('-') %}
{%                 set evpn_hostflap_detection_threshold = router_bgp.address_family_evpn.evpn_hostflap_detection.threshold | arista.avd.default('-') %}
{%             else %}
{%                 set evpn_hostflap_detection_state = "Disabled" %}
{%                 set evpn_hostflap_detection_window = '-' %}
{%                 set evpn_hostflap_detection_threshold = '-' %}
{%             endif %}
| {{ evpn_hostflap_detection_state }} | {{ evpn_hostflap_detection_window }} |  {{ evpn_hostflap_detection_threshold }}
{%         endif %}
{%     endif %}
|===
{%     if router_bgp.vlan_aware_bundles is arista.avd.defined %}

==== Router BGP VLAN Aware Bundles

[%header,cols=7*]
|===
| VLAN Aware Bundle
| Route-Distinguisher
| Both Route-Target
| Import Route Target
| Export Route-Target
| Redistribute | VLANs

{%         for vlan_aware_bundle in router_bgp.vlan_aware_bundles | arista.avd.natural_sort %}
{%             set route_distinguisher = router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd | arista.avd.default("-") %}
{%             set vlans = router_bgp.vlan_aware_bundles[vlan_aware_bundle].vlan | arista.avd.default("-") %}
{%             set both_route_target = router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.both | arista.avd.default("-") %}
{%             set import_route_target = router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.import | arista.avd.default("-")  %}
{%             set export_route_target = router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.export | arista.avd.default("-") %}
{%             set redistribute_route = router_bgp.vlan_aware_bundles[vlan_aware_bundle].redistribute_routes | arista.avd.default("-")  %}
| {{ vlan_aware_bundle }}
| {{ route_distinguisher }}
| {{ both_route_target | join("<br>") }}
| {{ import_route_target | join("<br>") }}
| {{ export_route_target | join("<br>") }}
| {{ redistribute_route | join("<br>") }}
| {{ vlans }}
{%         endfor %}
|===
{%     endif %}




{%     if router_bgp.vlans is arista.avd.defined %}

==== Router BGP VLANs

[%header,cols=6*]
|===
| VLAN
| Route-Distinguisher
| Both Route-Target
| Import Route Target
| Export Route-Target
| Redistribute

{%         for vlan in router_bgp.vlans | arista.avd.natural_sort %}
{%             set route_distinguisher = router_bgp.vlans[vlan].rd | arista.avd.default("-")  %}
{%             set both_route_target = router_bgp.vlans[vlan].route_targets.both | arista.avd.default("-")  %}
{%             set import_route_target = router_bgp.vlans[vlan].route_targets.import | arista.avd.default("-") %}
{%             set export_route_target = router_bgp.vlans[vlan].route_targets.export | arista.avd.default("-") %}
{%             set redistribute = router_bgp.vlans[vlan].redistribute_routes | arista.avd.default("-") %}
| {{ vlan }}
| {{ route_distinguisher }}
| {{ both_route_target | join("<br>") }}
| {{ import_route_target | join("<br>") }}
| {{ export_route_target | join("<br>") }}
| {{ redistribute | join("<br>") }}

{%         endfor %}

|===
{%     endif %}


{%     if router_bgp.vpws is arista.avd.defined %}

==== Router BGP VPWS Instances

[%header,cols=2*]
|===
| Instance
| Route-Distinguisher
| Both Route-Target
| Pseudowire
| Local ID
| Remote ID

{%         for vpws_service in router_bgp.vpws %}
{%             if vpws_service.name is arista.avd.defined and vpws_service.rd is arista.avd.defined and vpws_service.route_targets.import_export is arista.avd.defined %}
{%                 for pseudowire in vpws_service.pseudowires | arista.avd.natural_sort("name") %}
{%                     if pseudowire.name is arista.avd.defined %}
| {{ vpws_service.name }}
| {{ vpws_service.rd }}
| {{ vpws_service.route_targets.import_export }}
| {{ pseudowire.name }}
|{{ pseudowire.id_local }}
|{{ pseudowire.id_remote }}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
|===
{%     endif %}



{%     if router_bgp.vrfs is arista.avd.defined %}
==== Router BGP VRFs

[%header,cols=3*]
|===
| VRF
| Route-Distinguisher
| Redistribute

{%         for vrf in router_bgp.vrfs | arista.avd.natural_sort %}
{%             set route_distinguisher = router_bgp.vrfs[vrf].rd | arista.avd.default("-") %}
{%             set redistribute = router_bgp.vrfs[vrf].redistribute_routes | arista.avd.default("-") %}
| {{ vrf }}
| {{ route_distinguisher }}
| {{ redistribute | join("<br>") }}

{%         endfor %}
|===

{%     endif %}

==== Router BGP Device Configuration

```eos
{% include 'eos/router-bgp.j2' %}
```
{% endif %}
